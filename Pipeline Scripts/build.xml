<?xml version="1.0" encoding="UTF-8"?>
<project name="name-of-project" default="full-build">
 <!-- By default, we assume all tools to be on the $PATH -->
 <property name="phpcs"   value="phpcs"/>
 <property name="phpunit" value="phpunit"/>

 <!-- Use this when the tools are located as PHARs in ${basedir}/build/tools
 <property name="pdepend" value="${basedir}/build/tools/pdepend.phar"/>
 <property name="phpcpd"  value="${basedir}/build/tools/phpcpd.phar"/>
 <property name="phpcs"   value="${basedir}/build/tools/phpcs.phar"/>
 <property name="phpdox"  value="${basedir}/build/tools/phpdox.phar"/>
 <property name="phploc"  value="${basedir}/build/tools/phploc.phar"/>
 <property name="phpmd"   value="${basedir}/build/tools/phpmd.phar"/>
 <property name="phpunit" value="${basedir}/build/tools/phpunit.phar"/> -->

 <!-- Use this when the tools are managed by Composer in ${basedir}/vendor/bin
 <property name="pdepend" value="${basedir}/vendor/bin/pdepend"/>
 <property name="phpcpd"  value="${basedir}/vendor/bin/phpcpd"/>
 <property name="phpcs"   value="${basedir}/vendor/bin/phpcs"/>
 <property name="phpdox"  value="${basedir}/vendor/bin/phpdox"/>
 <property name="phploc"  value="${basedir}/vendor/bin/phploc"/>
 <property name="phpmd"   value="${basedir}/vendor/bin/phpmd"/>
 <property name="phpunit" value="${basedir}/vendor/bin/phpunit"/> -->

 <target name="full-build"
         depends="prepare,static-analysis,phpunit,phpdox,-check-failure"
         description="Performs static analysis, runs the tests, and generates project documentation"/>

 <target name="full-build-parallel"
         depends="prepare,static-analysis-parallel,phpunit,phpdox,-check-failure"
         description="Performs static analysis (executing the tools in parallel), runs the tests, and generates project documentation"/>

 <target name="quick-build"
         depends="prepare,lint,phpunit-no-coverage"
         description="Performs a lint check and runs the tests (without generating code coverage reports)"/>

 <target name="static-analysis"
         depends="lint,phploc-ci,pdepend,phpmd-ci,phpcs-ci,phpcpd-ci"
         description="Performs static analysis" />

 <!-- Adjust the threadCount attribute's value to the number of CPUs -->
 <target name="static-analysis-parallel"
         description="Performs static analysis (executing the tools in parallel)">
  <parallel threadCount="2">
   <antcall target="phpcs-ci"/>
  </parallel>
 </target>

 <target name="clean"
         unless="clean.done"
         description="Cleanup build artifacts">
  <delete dir="${basedir}/build/api"/>
  <delete dir="${basedir}/build/coverage"/>
  <delete dir="${basedir}/build/logs"/>
  <property name="clean.done" value="true"/>
 </target>

 <target name="prepare"
         unless="prepare.done"
         depends="clean"
         description="Prepare for build">
  <mkdir dir="${basedir}/build/api"/>
  <mkdir dir="${basedir}/build/coverage"/>
  <mkdir dir="${basedir}/build/logs"/>
  <property name="prepare.done" value="true"/>
 </target>


 <target name="phpcs"
         unless="phpcs.done"
         description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
  <exec executable="${phpcs}" taskname="phpcs">
   <arg value="--standard=PSR2" />
   <arg value="--extensions=php" />
   <arg value="--ignore=autoload.php" />
   <arg path="${basedir}/src" />
   <arg path="${basedir}/tests" />
  </exec>

  <property name="phpcs.done" value="true"/>
 </target>

 <target name="phpcs-ci"
         unless="phpcs.done"
         depends="prepare"
         description="Find coding standard violations using PHP_CodeSniffer and log result in XML format. Intended for usage within a continuous integration environment.">
  <exec executable="${phpcs}" output="/dev/null" taskname="phpcs">
   <arg value="--report=checkstyle" />
   <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
   <arg value="--standard=PSR2" />
   <arg value="--extensions=php" />
   <arg value="--ignore=autoload.php" />
   <arg path="${basedir}/src" />
   <arg path="${basedir}/tests" />
  </exec>

  <property name="phpcs.done" value="true"/>
 </target>

 <target name="phpunit"
         unless="phpunit.done"
         depends="prepare"
         description="Run unit tests with PHPUnit">
  <exec executable="${phpunit}" resultproperty="result.phpunit" taskname="phpunit">
   <arg value="--configuration"/>
   <arg path="${basedir}/build/phpunit.xml"/>
  </exec>

  <property name="phpunit.done" value="true"/>
 </target>

 <target name="phpunit-no-coverage"
         unless="phpunit.done"
         depends="prepare"
         description="Run unit tests with PHPUnit (without generating code coverage reports)">
  <exec executable="${phpunit}" failonerror="true" taskname="phpunit">
   <arg value="--configuration"/>
   <arg path="${basedir}/build/phpunit.xml"/>
   <arg value="--no-coverage"/>
  </exec>

  <property name="phpunit.done" value="true"/>
 </target>


 <target name="-check-failure">
  <fail message="PHPUnit did not finish successfully">
   <condition>
    <not>
     <equals arg1="${result.phpunit}" arg2="0"/>
    </not>
   </condition>
  </fail>
 </target>
</project>