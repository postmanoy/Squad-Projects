Parameters:
  KeyName:
    Description: Name of an existing EC2 key pair for EC2 instance Access.
    Type: AWS::EC2::KeyPair::KeyName
  Subnet:
    Description: Subnet for the Instance
    Type: "AWS::EC2::Subnet::Id"
  InstanceType:
    Description: Instance1 EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large    
    - t2.xlarge
    - t2.2xlarge
    - t3.nano
    - t3.micro
    - t3.small
    - t3.medium
    - t3.large
    - t3.xlarge
    - t3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - m4.16xlarge
    - m5.large
    - m5.xlarge
    - m5.2xlarge
    - m5.4xlarge
    - m5.8xlarge
  osType:
   Description: AMI ID of the instance
   Type: String
   AllowedValues:
   - AmazonLinux
   - AmazonLinux2
   - RHEL8
   - CentOS7
   - Ubuntu16
   - Ubuntu18
   - SUSE12
   - SUSE15
  NameTag:
    Description: EC2 Instance Name Tags
    Type: String



Resources:
  Ec2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId:
       Fn::FindInMap:
       - RegionAndInstanceTypeToAMIID
       - Ref: AWS::Region
       - Ref: osType
      InstanceType: 
       Ref: InstanceType
      KeyName: !Ref KeyName
      SubnetId: !Ref Subnet

      Tags: 
      - 
        Key: "Name"
        Value: !Ref NameTag

      UserData:
        Fn::Base64: |
            #!/bin/bash

                ACTIVATIONURL='dsm://agents.deepsecurity.trendmicro.com:443/'
                MANAGERURL='https://app.deepsecurity.trendmicro.com:443'
                CURLOPTIONS='--silent --tlsv1.2'
                linuxPlatform='';
                isRPM='';

                if [[ $(/usr/bin/id -u) -ne 0 ]]; then
                    echo You are not running as the root user.  Please try again with root privileges.;
                    logger -t You are not running as the root user.  Please try again with root privileges.;
                    exit 1;
                fi;

                if ! type curl >/dev/null 2>&1; then
                    echo "Please install CURL before running this script."
                    logger -t Please install CURL before running this script
                    exit 1
                fi

                CURLOUT=$(eval curl $MANAGERURL/software/deploymentscript/platform/linuxdetectscriptv1/ -o /tmp/PlatformDetection $CURLOPTIONS;)
                err=$?
                if [[ $err -eq 60 ]]; then
                    echo "TLS certificate validation for the agent package download has failed. Please check that your Deep Security Manager TLS certificate is signed by a trusted root certificate authority. For more information, search for \"deployment scripts\" in the Deep Security Help Center."
                    logger -t TLS certificate validation for the agent package download has failed. Please check that your Deep Security Manager TLS certificate is signed by a trusted root certificate authority. For more information, search for \"deployment scripts\" in the Deep Security Help Center.
                    exit 1;
                fi

                if [ -s /tmp/PlatformDetection ]; then
                    . /tmp/PlatformDetection
                else
                    echo "Failed to download the agent installation support script."
                    logger -t Failed to download the Deep Security Agent installation support script
                    exit 1
                fi

                platform_detect
                if [[ -z "${linuxPlatform}" ]] || [[ -z "${isRPM}" ]]; then
                    echo Unsupported platform is detected
                    logger -t Unsupported platform is detected
                    exit 1
                fi

                echo Downloading agent package...
                if [[ $isRPM == 1 ]]; then package='agent.rpm'
                    else package='agent.deb'
                fi
                curl -H "Agent-Version-Control: on" $MANAGERURL/software/agent/${runningPlatform}${majorVersion}/${archType}/$package?tenantID=73293 -o /tmp/$package $CURLOPTIONS

                echo Installing agent package...
                rc=1
                if [[ $isRPM == 1 && -s /tmp/agent.rpm ]]; then
                    rpm -ihv /tmp/agent.rpm
                    rc=$?
                elif [[ -s /tmp/agent.deb ]]; then
                    dpkg -i /tmp/agent.deb
                    rc=$?
                else
                    echo Failed to download the agent package. Please make sure the package is imported in the Deep Security Manager
                    logger -t Failed to download the agent package. Please make sure the package is imported in the Deep Security Manager
                    exit 1
                fi
                if [[ ${rc} != 0 ]]; then
                    echo Failed to install the agent package
                    logger -t Failed to install the agent package
                    exit 1
                fi

                echo Install the agent package successfully

                sleep 15
                /opt/ds_agent/dsa_control -r
                /opt/ds_agent/dsa_control -a $ACTIVATIONURL "tenantID:207FC65B-590D-9784-8504-DB36F734F163" "token:7B7CB647-1DB3-649B-B67B-27B1D518E4D9" "policyid:34"
                # /opt/ds_agent/dsa_control -a dsm://agents.deepsecurity.trendmicro.com:443/ "tenantID:207FC65B-590D-9784-8504-DB36F734F163" "token:7B7CB647-1DB3-649B-B67B-27B1D518E4D9" "policyid:34"
        
Mappings:
 RegionAndInstanceTypeToAMIID:
  us-east-2:
   AmazonLinux: ami-0d542ef84ec55d71c
   AmazonLinux2: ami-02ccb28830b645a41
   RHEL8: ami-0520e698dd500b1d1
   CentOS7: ami-0f2b4fc905b0bd1f1
   Ubuntu16: ami-0d03add87774b12c5
   Ubuntu18: ami-0d5d9d301c853a04a
   SUSE12: ami-051fc7a55ea30936f
   SUSE15: ami-052a6e77572eba9a9
  