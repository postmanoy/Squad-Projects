AWSTemplateFormatVersion: 2010-09-09
Description: "clarkp Test Instance"

Parameters:
  KeyName:
    Description: Name of an existing EC2 key pair for EC2 instance Access.
    Type: AWS::EC2::KeyPair::KeyName
  DSManager:
    Description: Choose the version of Deep Security Manager.
    Type: String
    Default: v113192
    AllowedValues:
    - v113192
    - v113195
    - v120296
    - v120327
    - v120347
    - v120366
    - v120372
    - v120383
    - v120416
    - v120426
    - v120446
    - v125732
    - v125855
  ShiftTag:
    Description: Select your shift
    Type: String
    AllowedValues:
    - ANZ-Shift
    - IST-Shift
    - NABU-Shift
  
Mappings:
  DSMVersion:
    us-east-2:
      v113192: https://files.trendmicro.com/products/deepsecurity/en/11.3/Manager-Linux-11.3.192.x64.sh
      v113195: https://files.trendmicro.com/products/deepsecurity/en/11.3/Manager-Linux-11.3.192.x64.sh
      v120296: https://files.trendmicro.com/products/deepsecurity/en/12.0/Manager-Linux-12.0.296.x64.sh
      v120327: https://files.trendmicro.com/products/deepsecurity/en/12.0/Manager-Linux-12.0.327.x64.sh
      v120347: https://files.trendmicro.com/products/deepsecurity/en/12.0/Manager-Linux-12.0.347.x64.sh
      v120366: https://files.trendmicro.com/products/deepsecurity/en/12.0/Manager-Linux-12.0.366.x64.sh
      v120372: https://files.trendmicro.com/products/deepsecurity/en/12.0/Manager-Linux-12.0.372.x64.sh
      v120383: https://files.trendmicro.com/products/deepsecurity/en/12.0/Manager-Linux-12.0.383.x64.sh
      v120393: https://files.trendmicro.com/products/deepsecurity/en/12.0/Manager-Linux-12.0.393.x64.sh
      v120416: https://files.trendmicro.com/products/deepsecurity/en/12.0/Manager-Linux-12.0.416.x64.sh
      v120426: https://files.trendmicro.com/products/deepsecurity/en/12.0/Manager-Linux-12.0.426.x64.sh
      v120446: https://files.trendmicro.com/products/deepsecurity/en/12.0/Manager-Linux-12.0.446.x64.sh
      v125732: https://files.trendmicro.com/products/deepsecurity/en/12.5/Manager-Linux-12.5.732.x64.sh
      v125855: https://files.trendmicro.com/products/deepsecurity/en/12.5/Manager-Linux-12.5.855.x64.sh

Resources:
  PostgreSQLDSM:
      Type: AWS::EC2::Instance
      Properties:
        ImageId: ami-0f2b4fc905b0bd1f1
        InstanceType: t2.large
        KeyName: !Ref KeyName
        BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs:
              VolumeSize: 50
              DeleteOnTermination: True
        SecurityGroupIds:
        - sg-0edbc623dc87e2892
        - sg-0f0b0eb448eeccce1
        Tags:
        - Key: Name
          Value: !Sub DSM${DSManager}-Postgresql-96
        - Key: Shift
          Value: !Ref ShiftTag
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            sudo yum update -y
            sudo yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm 
            sudo systemctl enable amazon-ssm-agent
            sudo systemctl start amazon-ssm-agent
            yum install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm
            yum install postgresql96 postgresql96-server -y
            /usr/pgsql-9.6/bin/postgresql96-setup initdb
            systemctl enable postgresql-9.6
            systemctl start postgresql-9.6
            sudo sed -i "s/local   all             all                                     peer/local   all             all                                     trust/g" /var/lib/pgsql/9.6/data/pg_hba.conf
            sudo sed -i "s/#listen_addresses = 'localhost'/listen_addresses = '*'/g" /var/lib/pgsql/9.6/data/postgresql.conf
            sed -i "82 a host    dsm        all         0.0.0.0/0       trust" /var/lib/pgsql/9.6/data/pg_hba.conf
            systemctl restart postgresql-9.6
            psql -U postgres <<EOF
            CREATE DATABASE dsm;
            CREATE USER mydsm with encrypted password 'N0virus1!';
            GRANT ALL PRIVILEGES ON DATABASE dsm to mydsm;
            GRANT ALL ON DATABASE dsm to mydsm;
            GRANT CONNECT ON DATABASE dsm to mydsm;
            ALTER ROLE mydsm CREATEDB CREATEROLE;
            EOF
            exit
            systemctl restart postgresql-9.6

  DSMEC2instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0b49e0985beb75934
      InstanceType: m4.large
      KeyName: !Ref KeyName
      SecurityGroupIds:
      - sg-0edbc623dc87e2892
      - sg-0f0b0eb448eeccce1
      BlockDeviceMappings:
        - DeviceName: /dev/sda2
          Ebs:
            VolumeSize: 50
            DeleteOnTermination: True
      Tags:
      - Key: Name 
        Value: !Sub DSM${DSManager}-OnPrem-Cloud
      - Key: Shift
        Value: !Ref ShiftTag
      UserData:
        Fn::Base64:
          Fn::Sub:
            # Use a literal | to let us enter a large block of text but with variable replacements
            # We then use those special variables inside the literal block
            # We can also use some functions and variables directly inside the literal block
            - |
              #!/bin/bash
              yum update -y
              yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm 
              systemctl enable amazon-ssm-agent
              systemctl start amazon-ssm-agent
              yum install wget unzip -y
              wget -P /home/ec2-user/ ${DSMv}
              cd /home/ec2-user
              TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"`
              PublicHostname=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/public-hostname`
              cat <<EOF>installdsm.properties
              AddressAndPortsScreen.ManagerAddress=$PublicHostname
              AddressAndPortsScreen.NewNode=True
              UpgradeVerificationScreen.Overwrite=False
              LicenseScreen.License.-1=AP-R9RM-92WHD-B2UR5-BV2YB-HZYM8-HYYVA
              DatabaseScreen.DatabaseType=PostgreSQL
              DatabaseScreen.Hostname=${PostgreSQLDSM.PrivateIp}
              DatabaseScreen.Transport=TCP
              DatabaseScreen.DatabaseName=dsm
              DatabaseScreen.Username=mydsm
              DatabaseScreen.Password=N0virus1!
              AddressAndPortsScreen.ManagerPort=4119
              AddressAndPortsScreen.HeartbeatPort=4120
              CredentialsScreen.Administrator.Username=master
              CredentialsScreen.Administrator.Password=N0virus1!
              CredentialsScreen.UseStrongPasswords=False
              SecurityUpdateScreen.UpdateComponents=True
              SecurityUpdateScreen.Proxy=False
              SecurityUpdateScreen.ProxyType=""
              SecurityUpdateScreen.ProxyAddress=""
              SecurityUpdateScreen.ProxyPort=""
              SecurityUpdateScreen.ProxyAuthentication="False"
              SecurityUpdateScreen.ProxyUsername=""
              SecurityUpdateScreen.ProxyPassword=""
              SoftwareUpdateScreen.UpdateSoftware=True
              SoftwareUpdateScreen.Proxy=False
              SoftwareUpdateScreen.ProxyType=""
              SoftwareUpdateScreen.ProxyAddress=""
              SoftwareUpdateScreen.ProxyPort=""
              SoftwareUpdateScreen.ProxyAuthentication="False"
              SoftwareUpdateScreen.ProxyUsername=""
              SoftwareUpdateScreen.ProxyPassword=""
              SoftwareUpdateScreen.ProxyAuthentication="False"
              RelayScreen.Install=True
              SmartProtectionNetworkScreen.EnableFeedback=False
              EOF
              dsm_name="$(ls /home/ec2-user | grep Manager-Linux)"
              chmod +x $dsm_name
              sh $dsm_name -q -console -Dinstall4j.language=en_US -varfile installdsm.properties
              sleep 30
              systemctl stop dsm_s
              /opt/dsm/dsm_c -action changesetting -name settings.configuration.webserviceAPIEnabled -value true
              /opt/dsm/dsm_c -action changesetting -name settings.configuration.statusMonitoringAPIEnabled -value true
              /opt/dsm/dsm_c -action changesetting -name settings.configuration.agentInitiatedActivation -value 1
              /opt/dsm/dsm_c -action changesetting -name settings.configuration.agentInitiatedActivationHostname -value true
              /opt/dsm/dsm_c -action changesetting -name settings.configuration.agentInitiatedActivationActiveHost -value 2
              /opt/dsm/dsm_c -action changesetting -name settings.configuration.allowReactivateClonedVM -value true
              /opt/dsm/dsm_c -action changesetting -name settings.configuration.allowReactivateUnknownVM -value true
              systemctl start dsm_s
            - {
              # This is where we keep the complex things we want inserted into the Fn::Sub literal block
              # You can even use Fn::If statements in this section
              DSMv:    !FindInMap [ DSMVersion,                !Ref "AWS::Region",         !Ref DSManager ]
              }
